# This is a basic workflow that is manually triggered

name: Build & Release

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
      
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  release:
    # The type of runner that the job will run on
    runs-on: windows-latest
    permissions:
       contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache/restore@v3
        id: cache-build
        with:
          path: x64/Release
          key: ${{ runner.os }}-build-${{ github.sha }}
      
      - name: Add MSBuild to PATH
        if: steps.cache-build.outputs.cache-hit != 'true'
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        if: steps.cache-build.outputs.cache-hit != 'true'
        # Add additional options to the MSBuild command line here (like platform or verbosity level).
        # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
        run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

      - uses: actions/cache/save@v3
        with:
          path: x64/Release
          key: ${{ steps.cache-build.outputs.cache-primary-key }}

      - name: Short handle
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Upload to Release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "x64/Release/*.exe"
          draft: true
          default_release_name: Release - ${{ steps.vars.outputs.sha_short }} (Draft)
          
  
